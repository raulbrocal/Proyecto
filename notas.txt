ANOTACIONES
En register.php
<?php
// Verificar si el usuario ya está autenticado mediante cookie
if (isset($_COOKIE['session'])) {
    // Validar la cookie de sesión aquí (comprobar si es válida en tu base de datos, por ejemplo)
    $sessionId = $_COOKIE['session'];
    // Aquí deberías realizar la validación de la sesión y redirigir al usuario a la página correspondiente si es válida
    // Por ejemplo, puedes redirigirlo a una página de inicio de sesión exitoso o al contenido restringido.
    // Puedes usar la función header() para redirigir al usuario a otra página:
    // header('Location: contenido_restringido.php');
    // exit;
}

// Si el usuario no está autenticado, mostrar el formulario de inicio de sesión
?>
<!DOCTYPE html>
<html>
<head>
    <title>Iniciar sesión</title>
</head>
<body>
    <h1>Iniciar sesión</h1>
    <form method="POST" action="login.php">
        <label for="username">Nombre de usuario:</label>
        <input type="text" id="username" name="username" required><br><br>
        <label for="password">Contraseña:</label>
        <input type="password" id="password" name="password" required><br><br>
        <input type="submit" value="Iniciar sesión">
    </form>
</body>
</html>

en login.php
<?php
// Verificar si se enviaron los datos del formulario de inicio de sesión
if (isset($_POST['username']) && isset($_POST['password'])) {
    // Verificar las credenciales del usuario (aquí deberías validarlas en tu base de datos, por ejemplo)
    $username = $_POST['username'];
    $password = $_POST['password'];

    // Realizar la verificación de las credenciales aquí
    $validCredentials = true; // Por simplicidad, asumimos que las credenciales son válidas

    if ($validCredentials) {
        // Generar un identificador único de sesión (puedes utilizar la función uniqid() u otro método)
        $sessionId = uniqid();

        // Establecer la cookie de sesión con el identificador único y otras configuraciones
        $cookieParams = session_get_cookie_params();
        $secure = true; // Indica que la cookie solo se enviará a través de conexiones HTTPS
        $httponly = true; // Indica que la cookie no será accesible desde scripts del lado cliente
        setcookie('session', $sessionId, time() + 3600, $cookieParams['path'], $cookieParams['domain'], $secure, $httponly);

        // Almacena la sesión en la base de datos
        // Aquí deberías utilizar tu propia lógica para conectarte a la base de datos y almacenar la sesión
        $dbHost = 'localhost';
        $dbUsername = 'tu_usuario';
        $dbPassword = 'tu_contraseña';
        $dbName = 'tu_base_de_datos';

        // Conexión a la base de datos
        $conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);
        if ($conn->connect_error) {
            die("Error de conexión a la base de datos: " . $conn->connect_error);
        }

        // Almacena la sesión en la base de datos
        $sql = "INSERT INTO sessions (session_id, username) VALUES ('$sessionId', '$username')";
        if ($conn->query($sql) === false) {
            echo "Error al almacenar la sesión en la base de datos: " . $conn->error;
            exit;
        }

        // Cierra la conexión a la base de datos
        $conn->close();

        // Redirigir al usuario a la página de contenido restringido o a otra página que desees
        header('Location: contenido_restringido.php');
        exit;
    } else {
        echo 'Credenciales inválidas. Por favor, inténtalo de nuevo.';
    }
}
?>







Menu.php
javascript
// Agregar event listeners a los botones de categoría
var categoryButtons = document.querySelectorAll('.menu-button');
categoryButtons.forEach(function(button) {
    button.addEventListener('click', function(e) {
        e.preventDefault();
        var category = button.getAttribute('data-category');
        showItems(category);
        setActiveButton(button);
    });
});

// Función para mostrar los items de una categoría
function showItems(category) {
    var items = document.querySelectorAll('.menu-item');
    items.forEach(function(item) {
        if (item.classList.contains(category)) {
            item.style.display = 'block';
        } else {
            item.style.display = 'none';
        }
    });
}

// Función para establecer el botón activo
function setActiveButton(button) {
    var activeButton = document.querySelector('.menu-button.active');
    activeButton.classList.remove('active');
    button.classList.add('active');
}

css
.menu-container {
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
}

.menu-title {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 20px;
}

.menu-buttons {
    display: flex;
    justify-content: center;
    margin-bottom: 20px;
}

.menu-button {
    padding: 10px 20px;
    margin: 0 10px;
    background-color: lightgray;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.menu-button.active {
    background-color: gray;
    color: white;
}

.menu-items {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

.menu-item {
    width: 200px;
    margin: 10px;
    padding: 10px;
    background-color: lightblue;
    border-radius: 5px;
    display: flex;
}

.menu-item-image {
    width: 50px;
    height: 50px;
    margin-right: 10px;
}

.menu-item-content {
    flex-grow: 1;
}

.menu-item-title {
    font-weight: bold;
}

menu.php
<!DOCTYPE html>
<html>
<head>
    <title>Menú</title>
    <link rel="stylesheet" type="text/css" href="menu.css">
</head>
<body>
    <div class="menu-container">
        <nav class="menu-navigation">
            <ul>
                <li><a href="#" class="menu-button active" data-category="bebidas">Bebidas</a></li>
                <li><a href="#" class="menu-button" data-category="postres">Postres</a></li>
                <li><a href="#" class="menu-button" data-category="entrantes">Entrantes</a></li>
                <li><a href="#" class="menu-button" data-category="comida">Comida</a></li>
            </ul>
        </nav>

        <h2 class="menu-title">Estás en la zona de menú</h2>

        <div class="menu-items" id="menuItemsContainer">
            <?php
            // Conexión a la base de datos
            $dbHost = 'localhost';
            $dbUsername = 'tu_usuario';
            $dbPassword = 'tu_contraseña';
            $dbName = 'tu_base_de_datos';

            $conn = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName);
            if ($conn->connect_error) {
                die("Error de conexión a la base de datos: " . $conn->connect_error);
            }

            // Obtener los items de la categoría seleccionada (por defecto, bebidas)
            $category = 'bebidas';
            if (isset($_GET['category'])) {
                $category = $_GET['category'];
            }

            $sql = "SELECT * FROM menu_items WHERE category = '$category'";
            $result = $conn->query($sql);

            if ($result->num_rows > 0) {
                while ($row = $result->fetch_assoc()) {
                    echo '<div class="menu-item ' . $category . '">';
                    echo '<img src="' . $row['image_url'] . '" alt="' . $row['name'] . '" class="menu-item-image">';
                    echo '<div class="menu-item-content">';
                    echo '<h3 class="menu-item-title">' . $row['name'] . '</h3>';
                    echo '<p>' . $row['description'] . '</p>';
                    echo '<p>Precio: ' . $row['price'] . '</p>';
                    echo '<p>Alergenos: ' . $row['allergens'] . '</p>';
                    echo '</div>';
                    echo '</div>';
                }
            } else {
                echo '<p>No hay items disponibles en esta categoría.</p>';
            }

            $conn->close();
            ?>
        </div>
    </div>

    <script src="menu.js"></script>
</body>
</html>

